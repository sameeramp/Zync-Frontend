{"ast":null,"code":"import io from \"socket.io-client\";\nimport { setPendingFriendsInvitations, setFriends, setOnlineUsers } from \"../store/actions/friendsActions\";\nimport store from \"../store/store\";\nimport { updateDirectChatHistoryIfActive } from \"../shared/utils/chat\";\nimport * as roomHandler from \"./roomHandler\";\nimport * as webRTCHandler from \"./webRTCHandler\";\nlet socket = null;\nexport const connectWithSocketServer = userDetails => {\n  const jwtToken = userDetails.token;\n  socket = io(\"http://localhost:5002\", {\n    auth: {\n      token: jwtToken\n    }\n  });\n  socket.on(\"connect\", () => {\n    console.log(\"succesfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n  socket.on(\"friends-invitations\", data => {\n    const {\n      pendingInvitations\n    } = data;\n    store.dispatch(setPendingFriendsInvitations(pendingInvitations));\n  });\n  socket.on(\"friends-list\", data => {\n    const {\n      friends\n    } = data;\n    store.dispatch(setFriends(friends));\n  });\n  socket.on(\"online-users\", data => {\n    const {\n      onlineUsers\n    } = data;\n    store.dispatch(setOnlineUsers(onlineUsers));\n  });\n  socket.on(\"direct-chat-history\", data => {\n    console.log(data);\n    updateDirectChatHistoryIfActive(data);\n  });\n  socket.on(\"room-create\", data => {\n    roomHandler.newRoomCreated(data);\n  });\n  socket.on(\"active-rooms\", data => {\n    roomHandler.updateActiveRooms(data);\n  });\n  socket.on(\"conn-prepare\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\n    socket.emit(\"conn-init\", {\n      connUserSocketId: connUserSocketId\n    });\n  });\n  socket.on(\"conn-init\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\n  });\n  socket.on(\"conn-signal\", data => {\n    webRTCHandler.handleSignalingData(data);\n  });\n  socket.on(\"room-participant-left\", data => {\n    console.log(\"user left room\");\n    webRTCHandler.handleParticipantLeftRoom(data);\n  });\n};\nexport const sendDirectMessage = data => {\n  console.log(data);\n  socket.emit(\"direct-message\", data);\n};\nexport const getDirectChatHistory = data => {\n  socket.emit(\"direct-chat-history\", data);\n};\nexport const createNewRoom = () => {\n  socket.emit(\"room-create\");\n};\nexport const joinRoom = data => {\n  socket.emit(\"room-join\", data);\n};\nexport const leaveRoom = data => {\n  socket.emit(\"room-leave\", data);\n};\nexport const signalPeerData = data => {\n  socket.emit(\"conn-signal\", data);\n};","map":{"version":3,"names":["io","setPendingFriendsInvitations","setFriends","setOnlineUsers","store","updateDirectChatHistoryIfActive","roomHandler","webRTCHandler","socket","connectWithSocketServer","userDetails","jwtToken","token","auth","on","console","log","id","data","pendingInvitations","dispatch","friends","onlineUsers","newRoomCreated","updateActiveRooms","connUserSocketId","prepareNewPeerConnection","emit","handleSignalingData","handleParticipantLeftRoom","sendDirectMessage","getDirectChatHistory","createNewRoom","joinRoom","leaveRoom","signalPeerData"],"sources":["/home/sameeramp/Videos/Zync-Frontend/src/realtimeCommunication/socketConnection.js"],"sourcesContent":["import io from \"socket.io-client\";\r\nimport {\r\n  setPendingFriendsInvitations,\r\n  setFriends,\r\n  setOnlineUsers,\r\n} from \"../store/actions/friendsActions\";\r\nimport store from \"../store/store\";\r\nimport { updateDirectChatHistoryIfActive } from \"../shared/utils/chat\";\r\nimport * as roomHandler from \"./roomHandler\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\n\r\nlet socket = null;\r\n\r\nexport const connectWithSocketServer = (userDetails) => {\r\n  const jwtToken = userDetails.token;\r\n\r\n  socket = io(\"http://localhost:5002\", {\r\n    auth: {\r\n      token: jwtToken,\r\n    },\r\n  });\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"succesfully connected with socket.io server\");\r\n    console.log(socket.id);\r\n  });\r\n\r\n  socket.on(\"friends-invitations\", (data) => {\r\n    const { pendingInvitations } = data;\r\n    store.dispatch(setPendingFriendsInvitations(pendingInvitations));\r\n  });\r\n\r\n  socket.on(\"friends-list\", (data) => {\r\n    const { friends } = data;\r\n    store.dispatch(setFriends(friends));\r\n  });\r\n\r\n  socket.on(\"online-users\", (data) => {\r\n    const { onlineUsers } = data;\r\n    store.dispatch(setOnlineUsers(onlineUsers));\r\n  });\r\n\r\n  socket.on(\"direct-chat-history\", (data) => {\r\n    console.log(data);\r\n    updateDirectChatHistoryIfActive(data);\r\n  });\r\n\r\n  socket.on(\"room-create\", (data) => {\r\n    roomHandler.newRoomCreated(data);\r\n  });\r\n\r\n  socket.on(\"active-rooms\", (data) => {\r\n    roomHandler.updateActiveRooms(data);\r\n  });\r\n\r\n  socket.on(\"conn-prepare\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\r\n    socket.emit(\"conn-init\", { connUserSocketId: connUserSocketId });\r\n  });\r\n\r\n  socket.on(\"conn-init\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\r\n  });\r\n\r\n  socket.on(\"conn-signal\", (data) => {\r\n    webRTCHandler.handleSignalingData(data);\r\n  });\r\n\r\n  socket.on(\"room-participant-left\", (data) => {\r\n    console.log(\"user left room\");\r\n    webRTCHandler.handleParticipantLeftRoom(data);\r\n  });\r\n};\r\n\r\nexport const sendDirectMessage = (data) => {\r\n  console.log(data);\r\n  socket.emit(\"direct-message\", data);\r\n};\r\n\r\nexport const getDirectChatHistory = (data) => {\r\n  socket.emit(\"direct-chat-history\", data);\r\n};\r\n\r\nexport const createNewRoom = () => {\r\n  socket.emit(\"room-create\");\r\n};\r\n\r\nexport const joinRoom = (data) => {\r\n  socket.emit(\"room-join\", data);\r\n};\r\n\r\nexport const leaveRoom = (data) => {\r\n  socket.emit(\"room-leave\", data);\r\n};\r\n\r\nexport const signalPeerData = (data) => {\r\n  socket.emit(\"conn-signal\", data);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}