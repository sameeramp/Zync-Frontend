{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Dialog from\"@mui/material/Dialog\";import DialogTitle from\"@mui/material/DialogTitle\";import DialogActions from\"@mui/material/DialogActions\";import DialogContent from\"@mui/material/DialogContent\";import DialogContentText from\"@mui/material/DialogContentText\";import Typography from\"@mui/material/Typography\";import{validateMail}from\"../../shared/utils/validators\";import InputWithLabel from\"../../shared/components/InputWithLabel\";import CustomPrimaryButton from\"../../shared/components/CustomPrimaryButton\";import{connect}from\"react-redux\";import{getActions}from\"../../store/actions/friendsActions\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddFriendDialog=_ref=>{let{isDialogOpen,closeDialogHandler,sendFriendInvitation=()=>{}}=_ref;const[mail,setMail]=useState(\"\");const[isFormValid,setIsFormValid]=useState(\"\");const handleSendInvitation=()=>{sendFriendInvitation({targetMailAddress:mail},handleCloseDialog);};const handleCloseDialog=()=>{closeDialogHandler();setMail(\"\");};useEffect(()=>{setIsFormValid(validateMail(mail));},[mail,setIsFormValid]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{open:isDialogOpen,onClose:handleCloseDialog,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsx(Typography,{children:\"Invite a Friend\"})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:/*#__PURE__*/_jsx(Typography,{children:\"Enter e-mail address of friend which you would like to invite\"})}),/*#__PURE__*/_jsx(InputWithLabel,{label:\"Mail\",type:\"text\",value:mail,setValue:setMail,placeholder:\"Enter mail address\"})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(CustomPrimaryButton,{onClick:handleSendInvitation,disabled:!isFormValid,label:\"Send\",additionalStyles:{marginLeft:\"15px\",marginRight:\"15px\",marginBottom:\"10px\"}})})]})});};const mapActionsToProps=dispatch=>{return{...getActions(dispatch)};};export default connect(null,mapActionsToProps)(AddFriendDialog);","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","Typography","validateMail","InputWithLabel","CustomPrimaryButton","connect","getActions","jsx","_jsx","jsxs","_jsxs","AddFriendDialog","_ref","isDialogOpen","closeDialogHandler","sendFriendInvitation","mail","setMail","isFormValid","setIsFormValid","handleSendInvitation","targetMailAddress","handleCloseDialog","children","open","onClose","label","type","value","setValue","placeholder","onClick","disabled","additionalStyles","marginLeft","marginRight","marginBottom","mapActionsToProps","dispatch"],"sources":["/home/sameeramp/Videos/Zync-Frontend/src/Dashboard/FriendsSideBar/AddFriendDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { validateMail } from \"../../shared/utils/validators\";\r\nimport InputWithLabel from \"../../shared/components/InputWithLabel\";\r\nimport CustomPrimaryButton from \"../../shared/components/CustomPrimaryButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getActions } from \"../../store/actions/friendsActions\";\r\n\r\nconst AddFriendDialog = ({\r\n  isDialogOpen,\r\n  closeDialogHandler,\r\n  sendFriendInvitation = () => {},\r\n}) => {\r\n  const [mail, setMail] = useState(\"\");\r\n  const [isFormValid, setIsFormValid] = useState(\"\");\r\n\r\n  const handleSendInvitation = () => {\r\n    sendFriendInvitation(\r\n      {\r\n        targetMailAddress: mail,\r\n      },\r\n      handleCloseDialog\r\n    );\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    closeDialogHandler();\r\n    setMail(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFormValid(validateMail(mail));\r\n  }, [mail, setIsFormValid]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={isDialogOpen} onClose={handleCloseDialog}>\r\n        <DialogTitle>\r\n          <Typography>Invite a Friend</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography>\r\n              Enter e-mail address of friend which you would like to invite\r\n            </Typography>\r\n          </DialogContentText>\r\n          <InputWithLabel\r\n            label=\"Mail\"\r\n            type=\"text\"\r\n            value={mail}\r\n            setValue={setMail}\r\n            placeholder=\"Enter mail address\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <CustomPrimaryButton\r\n            onClick={handleSendInvitation}\r\n            disabled={!isFormValid}\r\n            label=\"Send\"\r\n            additionalStyles={{\r\n              marginLeft: \"15px\",\r\n              marginRight: \"15px\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    ...getActions(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(AddFriendDialog);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,iBAAiB,KAAM,iCAAiC,CAC/D,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,YAAY,KAAQ,+BAA+B,CAC5D,MAAO,CAAAC,cAAc,KAAM,wCAAwC,CACnE,MAAO,CAAAC,mBAAmB,KAAM,6CAA6C,CAC7E,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,UAAU,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhE,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAIlB,IAJmB,CACvBC,YAAY,CACZC,kBAAkB,CAClBC,oBAAoB,CAAGA,CAAA,GAAM,CAAC,CAChC,CAAC,CAAAH,IAAA,CACC,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACwB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAA0B,oBAAoB,CAAGA,CAAA,GAAM,CACjCL,oBAAoB,CAClB,CACEM,iBAAiB,CAAEL,IACrB,CAAC,CACDM,iBACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAA,iBAAiB,CAAGA,CAAA,GAAM,CAC9BR,kBAAkB,CAAC,CAAC,CACpBG,OAAO,CAAC,EAAE,CAAC,CACb,CAAC,CAEDtB,SAAS,CAAC,IAAM,CACdwB,cAAc,CAACjB,YAAY,CAACc,IAAI,CAAC,CAAC,CACpC,CAAC,CAAE,CAACA,IAAI,CAAEG,cAAc,CAAC,CAAC,CAE1B,mBACEX,IAAA,QAAAe,QAAA,cACEb,KAAA,CAACd,MAAM,EAAC4B,IAAI,CAAEX,YAAa,CAACY,OAAO,CAAEH,iBAAkB,CAAAC,QAAA,eACrDf,IAAA,CAACX,WAAW,EAAA0B,QAAA,cACVf,IAAA,CAACP,UAAU,EAAAsB,QAAA,CAAC,iBAAe,CAAY,CAAC,CAC7B,CAAC,cACdb,KAAA,CAACX,aAAa,EAAAwB,QAAA,eACZf,IAAA,CAACR,iBAAiB,EAAAuB,QAAA,cAChBf,IAAA,CAACP,UAAU,EAAAsB,QAAA,CAAC,+DAEZ,CAAY,CAAC,CACI,CAAC,cACpBf,IAAA,CAACL,cAAc,EACbuB,KAAK,CAAC,MAAM,CACZC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEZ,IAAK,CACZa,QAAQ,CAAEZ,OAAQ,CAClBa,WAAW,CAAC,oBAAoB,CACjC,CAAC,EACW,CAAC,cAChBtB,IAAA,CAACV,aAAa,EAAAyB,QAAA,cACZf,IAAA,CAACJ,mBAAmB,EAClB2B,OAAO,CAAEX,oBAAqB,CAC9BY,QAAQ,CAAE,CAACd,WAAY,CACvBQ,KAAK,CAAC,MAAM,CACZO,gBAAgB,CAAE,CAChBC,UAAU,CAAE,MAAM,CAClBC,WAAW,CAAE,MAAM,CACnBC,YAAY,CAAE,MAChB,CAAE,CACH,CAAC,CACW,CAAC,EACV,CAAC,CACN,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAIC,QAAQ,EAAK,CACtC,MAAO,CACL,GAAGhC,UAAU,CAACgC,QAAQ,CACxB,CAAC,CACH,CAAC,CAED,cAAe,CAAAjC,OAAO,CAAC,IAAI,CAAEgC,iBAAiB,CAAC,CAAC1B,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}