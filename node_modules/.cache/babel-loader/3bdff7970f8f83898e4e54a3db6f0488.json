{"ast":null,"code":"import React from\"react\";import{styled}from\"@mui/system\";import FriendsListItem from\"./FriendsListItem\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";const MainContainer=styled(\"div\")({flexGrow:1,width:\"100%\"});const checkOnlineUsers=function(){let friends=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let onlineUsers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];friends.forEach(f=>{const isUserOnline=onlineUsers.find(user=>user.userId===f.id);f.isOnline=isUserOnline?true:false;});return friends;};const FriendsList=_ref=>{let{friends,onlineUsers}=_ref;return/*#__PURE__*/_jsx(MainContainer,{children:checkOnlineUsers(friends,onlineUsers).map(f=>/*#__PURE__*/_jsx(FriendsListItem,{username:f.username,id:f.id,isOnline:f.isOnline},f.id))});};const mapStoreStateToProps=_ref2=>{let{friends}=_ref2;return{...friends};};export default connect(mapStoreStateToProps)(FriendsList);","map":{"version":3,"names":["React","styled","FriendsListItem","connect","jsx","_jsx","MainContainer","flexGrow","width","checkOnlineUsers","friends","arguments","length","undefined","onlineUsers","forEach","f","isUserOnline","find","user","userId","id","isOnline","FriendsList","_ref","children","map","username","mapStoreStateToProps","_ref2"],"sources":["/home/sameeramp/Videos/Zync-Frontend/src/Dashboard/FriendsSideBar/FriendsList/FriendsList.js"],"sourcesContent":["import React from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport FriendsListItem from \"./FriendsListItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MainContainer = styled(\"div\")({\r\n  flexGrow: 1,\r\n  width: \"100%\",\r\n});\r\n\r\nconst checkOnlineUsers = (friends = [], onlineUsers = []) => {\r\n  friends.forEach((f) => {\r\n    const isUserOnline = onlineUsers.find((user) => user.userId === f.id);\r\n    f.isOnline = isUserOnline ? true : false;\r\n  });\r\n\r\n  return friends;\r\n};\r\n\r\nconst FriendsList = ({ friends, onlineUsers }) => {\r\n  return (\r\n    <MainContainer>\r\n      {checkOnlineUsers(friends, onlineUsers).map((f) => (\r\n        <FriendsListItem\r\n          username={f.username}\r\n          id={f.id}\r\n          key={f.id}\r\n          isOnline={f.isOnline}\r\n        />\r\n      ))}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ friends }) => {\r\n  return {\r\n    ...friends,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(FriendsList);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,aAAa,CACpC,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OAASC,OAAO,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,aAAa,CAAGL,MAAM,CAAC,KAAK,CAAC,CAAC,CAClCM,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAE,MACT,CAAC,CAAC,CAEF,KAAM,CAAAC,gBAAgB,CAAG,QAAAA,CAAA,CAAoC,IAAnC,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,WAAW,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACtDD,OAAO,CAACK,OAAO,CAAEC,CAAC,EAAK,CACrB,KAAM,CAAAC,YAAY,CAAGH,WAAW,CAACI,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAKJ,CAAC,CAACK,EAAE,CAAC,CACrEL,CAAC,CAACM,QAAQ,CAAGL,YAAY,CAAG,IAAI,CAAG,KAAK,CAC1C,CAAC,CAAC,CAEF,MAAO,CAAAP,OAAO,CAChB,CAAC,CAED,KAAM,CAAAa,WAAW,CAAGC,IAAA,EAA8B,IAA7B,CAAEd,OAAO,CAAEI,WAAY,CAAC,CAAAU,IAAA,CAC3C,mBACEnB,IAAA,CAACC,aAAa,EAAAmB,QAAA,CACXhB,gBAAgB,CAACC,OAAO,CAAEI,WAAW,CAAC,CAACY,GAAG,CAAEV,CAAC,eAC5CX,IAAA,CAACH,eAAe,EACdyB,QAAQ,CAAEX,CAAC,CAACW,QAAS,CACrBN,EAAE,CAAEL,CAAC,CAACK,EAAG,CAETC,QAAQ,CAAEN,CAAC,CAACM,QAAS,EADhBN,CAAC,CAACK,EAER,CACF,CAAC,CACW,CAAC,CAEpB,CAAC,CAED,KAAM,CAAAO,oBAAoB,CAAGC,KAAA,EAAiB,IAAhB,CAAEnB,OAAQ,CAAC,CAAAmB,KAAA,CACvC,MAAO,CACL,GAAGnB,OACL,CAAC,CACH,CAAC,CAED,cAAe,CAAAP,OAAO,CAACyB,oBAAoB,CAAC,CAACL,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}