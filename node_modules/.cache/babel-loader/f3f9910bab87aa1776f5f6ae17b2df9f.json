{"ast":null,"code":"import store from\"../../store/store\";import{setMessages}from\"../../store/actions/chatActions\";export const updateDirectChatHistoryIfActive=data=>{var _store$getState$chat$;const{participants,messages}=data;// find id of user from token and id from active conversation\nconst receiverId=(_store$getState$chat$=store.getState().chat.chosenChatDetails)===null||_store$getState$chat$===void 0?void 0:_store$getState$chat$.id;const userId=store.getState().auth.userDetails._id;if(receiverId&&userId){const usersInCoversation=[receiverId,userId];updateChatHistoryIfSameConversationActive({participants,usersInCoversation,messages});}};const updateChatHistoryIfSameConversationActive=_ref=>{let{participants,usersInCoversation,messages}=_ref;const result=participants.every(function(participantId){return usersInCoversation.includes(participantId);});if(result){store.dispatch(setMessages(messages));}};","map":{"version":3,"names":["store","setMessages","updateDirectChatHistoryIfActive","data","_store$getState$chat$","participants","messages","receiverId","getState","chat","chosenChatDetails","id","userId","auth","userDetails","_id","usersInCoversation","updateChatHistoryIfSameConversationActive","_ref","result","every","participantId","includes","dispatch"],"sources":["/home/sameeramp/Videos/Zync-Frontend/src/shared/utils/chat.js"],"sourcesContent":["import store from \"../../store/store\";\r\nimport { setMessages } from \"../../store/actions/chatActions\";\r\n\r\nexport const updateDirectChatHistoryIfActive = (data) => {\r\n  const { participants, messages } = data;\r\n\r\n  // find id of user from token and id from active conversation\r\n  const receiverId = store.getState().chat.chosenChatDetails?.id;\r\n  const userId = store.getState().auth.userDetails._id;\r\n\r\n  if (receiverId && userId) {\r\n    const usersInCoversation = [receiverId, userId];\r\n\r\n    updateChatHistoryIfSameConversationActive({\r\n      participants,\r\n      usersInCoversation,\r\n      messages,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateChatHistoryIfSameConversationActive = ({\r\n  participants,\r\n  usersInCoversation,\r\n  messages,\r\n}) => {\r\n  const result = participants.every(function (participantId) {\r\n    return usersInCoversation.includes(participantId);\r\n  });\r\n\r\n  if (result) {\r\n    store.dispatch(setMessages(messages));\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,mBAAmB,CACrC,OAASC,WAAW,KAAQ,iCAAiC,CAE7D,MAAO,MAAM,CAAAC,+BAA+B,CAAIC,IAAI,EAAK,KAAAC,qBAAA,CACvD,KAAM,CAAEC,YAAY,CAAEC,QAAS,CAAC,CAAGH,IAAI,CAEvC;AACA,KAAM,CAAAI,UAAU,EAAAH,qBAAA,CAAGJ,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,iBAAiB,UAAAN,qBAAA,iBAAvCA,qBAAA,CAAyCO,EAAE,CAC9D,KAAM,CAAAC,MAAM,CAAGZ,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAACK,IAAI,CAACC,WAAW,CAACC,GAAG,CAEpD,GAAIR,UAAU,EAAIK,MAAM,CAAE,CACxB,KAAM,CAAAI,kBAAkB,CAAG,CAACT,UAAU,CAAEK,MAAM,CAAC,CAE/CK,yCAAyC,CAAC,CACxCZ,YAAY,CACZW,kBAAkB,CAClBV,QACF,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAW,yCAAyC,CAAGC,IAAA,EAI5C,IAJ6C,CACjDb,YAAY,CACZW,kBAAkB,CAClBV,QACF,CAAC,CAAAY,IAAA,CACC,KAAM,CAAAC,MAAM,CAAGd,YAAY,CAACe,KAAK,CAAC,SAAUC,aAAa,CAAE,CACzD,MAAO,CAAAL,kBAAkB,CAACM,QAAQ,CAACD,aAAa,CAAC,CACnD,CAAC,CAAC,CAEF,GAAIF,MAAM,CAAE,CACVnB,KAAK,CAACuB,QAAQ,CAACtB,WAAW,CAACK,QAAQ,CAAC,CAAC,CACvC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}